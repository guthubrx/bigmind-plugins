(function(t,s){typeof exports=="object"&&typeof module<"u"?s(exports):typeof define=="function"&&define.amd?define(["exports"],s):(t=typeof globalThis<"u"?globalThis:t||self,s(t.Analytics={}))})(this,function(t){"use strict";const s={id:"com.bigmind.analytics",name:"Plugin Analytics",version:"1.0.0",description:"Analyse et collecte des statistiques sur vos mindmaps (exemple)",author:"BigMind Team",main:"analytics-plugin.js",permissions:[],hooks:{listens:["mindmap.nodeCreated","mindmap.nodeUpdated","mindmap.nodeDeleted"],emits:[]}};class a{constructor(){this.manifest=s,this.context=null,this.stats={nodesCreated:0,nodesUpdated:0,nodesDeleted:0}}async activate(e){this.context=e;try{const i=await e.api.storage.get("analytics-stats");i&&(this.stats=JSON.parse(i))}catch{}e.hooks.registerAction("mindmap.nodeCreated",async()=>{this.stats.nodesCreated+=1,await this.saveStats()}),e.hooks.registerAction("mindmap.nodeUpdated",async()=>{this.stats.nodesUpdated+=1,await this.saveStats()}),e.hooks.registerAction("mindmap.nodeDeleted",async()=>{this.stats.nodesDeleted+=1,await this.saveStats()})}async saveStats(){if(this.context)try{await this.context.api.storage.set("analytics-stats",JSON.stringify(this.stats))}catch(e){console.error("‚ùå Failed to save stats:",e)}}async deactivate(){this.context=null}}const n=new a;t.AnalyticsPlugin=a,t.default=n,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
