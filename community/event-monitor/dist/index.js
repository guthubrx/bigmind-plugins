(function(e,o){typeof exports=="object"&&typeof module<"u"?o(exports):typeof define=="function"&&define.amd?define(["exports"],o):(e=typeof globalThis<"u"?globalThis:e||self,o(e.EventMonitor={}))})(this,function(e){"use strict";class o{constructor(){this.events=[],this.maxEvents=1e3,this.listeners=new Set}addEvent(t,n,i){const a={id:`${Date.now()}_${Math.random().toString(36).substr(2,9)}`,timestamp:Date.now(),type:t,category:n,data:i};this.events.unshift(a),this.events.length>this.maxEvents&&(this.events=this.events.slice(0,this.maxEvents)),this.notifyListeners()}getEvents(){return[...this.events]}clear(){this.events=[],this.notifyListeners()}subscribe(t){return this.listeners.add(t),()=>this.listeners.delete(t)}notifyListeners(){this.listeners.forEach(t=>t([...this.events]))}setMaxEvents(t){this.maxEvents=t,this.events.length>this.maxEvents&&(this.events=this.events.slice(0,this.maxEvents),this.notifyListeners())}}const s=new o,c={id:"com.bigmind.event-monitor",name:"Event Monitor",version:"1.0.0",description:"Capture et affiche tous les événements système pour le debug",author:"BigMind Team",main:"event-monitor-plugin.js",permissions:[]};async function d(r){[{hook:"mindmap.nodeCreated",category:"nodes"},{hook:"mindmap.nodeUpdated",category:"nodes"},{hook:"mindmap.nodeDeleted",category:"nodes"},{hook:"mindmap.nodeSelected",category:"nodes"},{hook:"mindmap.nodeStyleChanged",category:"nodes"},{hook:"file.created",category:"files"},{hook:"file.opened",category:"files"},{hook:"file.closed",category:"files"},{hook:"file.activated",category:"files"},{hook:"file.sheetChanged",category:"files"},{hook:"viewport.changed",category:"viewport"},{hook:"palette.changed",category:"colors"},{hook:"colors.applied",category:"colors"},{hook:"theme.changed",category:"colors"},{hook:"settings.changed",category:"settings"},{hook:"canvas.optionChanged",category:"canvas"},{hook:"tag.created",category:"tags"},{hook:"tag.deleted",category:"tags"},{hook:"tag.visibilityChanged",category:"tags"},{hook:"tag.nodeTagged",category:"tags"},{hook:"tag.nodeUntagged",category:"tags"}].forEach(({hook:n,category:i})=>{r.hooks.registerAction(n,async a=>{s.addEvent(n,i,a)})})}async function h(){s.clear()}e.activate=d,e.deactivate=h,e.eventMonitorStore=s,e.manifest=c,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});
