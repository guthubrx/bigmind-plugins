var EventMonitor=function(t){"use strict";class r{constructor(){this.events=[],this.maxEvents=1e3,this.listeners=new Set}addEvent(e,o,s){const i={id:`${Date.now()}_${Math.random().toString(36).substr(2,9)}`,timestamp:Date.now(),type:e,category:o,data:s};this.events.unshift(i),this.events.length>this.maxEvents&&(this.events=this.events.slice(0,this.maxEvents)),this.notifyListeners()}getEvents(){return[...this.events]}clear(){this.events=[],this.notifyListeners()}subscribe(e){return this.listeners.add(e),()=>this.listeners.delete(e)}notifyListeners(){this.listeners.forEach(e=>e([...this.events]))}setMaxEvents(e){this.maxEvents=e,this.events.length>this.maxEvents&&(this.events=this.events.slice(0,this.maxEvents),this.notifyListeners())}}const n=new r,c={id:"com.bigmind.event-monitor",name:"Event Monitor",version:"1.0.0",description:"Capture et affiche tous les événements système pour le debug",author:"BigMind Team",main:"event-monitor-plugin.js",permissions:[]};async function h(a){[{hook:"mindmap.nodeCreated",category:"nodes"},{hook:"mindmap.nodeUpdated",category:"nodes"},{hook:"mindmap.nodeDeleted",category:"nodes"},{hook:"mindmap.nodeSelected",category:"nodes"},{hook:"mindmap.nodeStyleChanged",category:"nodes"},{hook:"file.created",category:"files"},{hook:"file.opened",category:"files"},{hook:"file.closed",category:"files"},{hook:"file.activated",category:"files"},{hook:"file.sheetChanged",category:"files"},{hook:"viewport.changed",category:"viewport"},{hook:"palette.changed",category:"colors"},{hook:"colors.applied",category:"colors"},{hook:"theme.changed",category:"colors"},{hook:"settings.changed",category:"settings"},{hook:"canvas.optionChanged",category:"canvas"},{hook:"tag.created",category:"tags"},{hook:"tag.deleted",category:"tags"},{hook:"tag.visibilityChanged",category:"tags"},{hook:"tag.nodeTagged",category:"tags"},{hook:"tag.nodeUntagged",category:"tags"}].forEach(({hook:o,category:s})=>{a.hooks.registerAction(o,async i=>{n.addEvent(o,s,i)})})}async function d(){n.clear()}return t.activate=h,t.deactivate=d,t.eventMonitorStore=n,t.manifest=c,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),t}({});
